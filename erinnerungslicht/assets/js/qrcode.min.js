// Vereinfachter QR-Code Generator
// Hinweis: In der Produktion sollte eine vollständige QR-Code-Bibliothek verwendet werden
(function() {
    'use strict';

    // Vereinfachte QR-Code-Implementierung für Demo-Zwecke
    // In der Produktion: qrcode.js oder ähnliche Bibliothek verwenden

    function generateQR(text, size = 200) {
        // Erstelle Canvas
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');
        canvas.width = size;
        canvas.height = size;

        // Einfaches Platzhalter-Muster (nicht funktional)
        // Hier würde normalerweise die echte QR-Code-Generierung stattfinden

        // Weißer Hintergrund
        ctx.fillStyle = '#ffffff';
        ctx.fillRect(0, 0, size, size);

        // Schwarzer Rahmen
        ctx.fillStyle = '#000000';
        ctx.fillRect(0, 0, size, 20);
        ctx.fillRect(0, 0, 20, size);
        ctx.fillRect(size-20, 0, 20, size);
        ctx.fillRect(0, size-20, size, 20);

        // Platzhalter-Muster
        const blockSize = size / 25;
        for (let i = 0; i < 25; i++) {
            for (let j = 0; j < 25; j++) {
                if (Math.random() > 0.5) {
                    ctx.fillRect(i * blockSize, j * blockSize, blockSize, blockSize);
                }
            }
        }

        // Ecken-Marker
        drawCornerMarker(ctx, 20, 20, blockSize * 7);
        drawCornerMarker(ctx, size - 20 - blockSize * 7, 20, blockSize * 7);
        drawCornerMarker(ctx, 20, size - 20 - blockSize * 7, blockSize * 7);

        return canvas;
    }

    function drawCornerMarker(ctx, x, y, size) {
        ctx.fillStyle = '#000000';
        ctx.fillRect(x, y, size, size);
        ctx.fillStyle = '#ffffff';
        ctx.fillRect(x + size/7, y + size/7, size * 5/7, size * 5/7);
        ctx.fillStyle = '#000000';
        ctx.fillRect(x + size * 2/7, y + size * 2/7, size * 3/7, size * 3/7);
    }

    function initializeQRGenerator() {
        const form = document.getElementById('qr-form');
        const preview = document.getElementById('qr-preview');
        const downloadBtn = document.getElementById('qr-download');
        const printBtn = document.getElementById('qr-print');

        if (!form) return;

        form.addEventListener('submit', function(e) {
            e.preventDefault();

            const url = document.getElementById('memorial-url').value.trim();
            if (!url) {
                alert('Bitte geben Sie eine URL ein.');
                return;
            }

            // Validiere URL
            if (!isValidUrl(url)) {
                alert('Bitte geben Sie eine gültige URL ein.');
                return;
            }

            generateQRLabels(url);
        });

        if (downloadBtn) {
            downloadBtn.addEventListener('click', downloadQRLabels);
        }

        if (printBtn) {
            printBtn.addEventListener('click', printQRLabels);
        }
    }

    function isValidUrl(string) {
        try {
            new URL(string);
            return true;
        } catch (_) {
            return false;
        }
    }

    function generateQRLabels(url) {
        const preview = document.getElementById('qr-preview');
        if (!preview) return;

        // Preview leeren
        preview.innerHTML = '';

        // Zwei QR-Labels erstellen
        for (let i = 0; i < 2; i++) {
            const labelContainer = document.createElement('div');
            labelContainer.className = 'qr-label';

            const qrCanvas = generateQR(url, 150);
            qrCanvas.className = 'qr-code';

            const urlText = document.createElement('div');
            urlText.className = 'qr-text';
            urlText.textContent = url;

            labelContainer.appendChild(qrCanvas);
            labelContainer.appendChild(urlText);
            preview.appendChild(labelContainer);
        }

        // Download- und Print-Buttons anzeigen
        const actions = document.querySelector('.qr-actions');
        if (actions) {
            actions.style.display = 'flex';
        }
    }

    function downloadQRLabels() {
        const labels = document.querySelectorAll('.qr-label');
        if (labels.length === 0) return;

        // Erstelle Canvas für beide Labels
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');

        // A4-Format in Pixeln (300 DPI)
        canvas.width = 2480; // 210mm
        canvas.height = 3508; // 297mm

        // Weißer Hintergrund
        ctx.fillStyle = '#ffffff';
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        // Labels positionieren
        const labelWidth = 800;
        const labelHeight = 500;
        const margin = 100;

        labels.forEach((label, index) => {
            const qrCanvas = label.querySelector('.qr-code');
            const text = label.querySelector('.qr-text').textContent;

            const x = margin + (index % 2) * (labelWidth + margin);
            const y = margin + Math.floor(index / 2) * (labelHeight + margin);

            // QR-Code zeichnen
            ctx.drawImage(qrCanvas, x + 50, y + 50, 200, 200);

            // Text zeichnen
            ctx.fillStyle = '#000000';
            ctx.font = '24px Arial';
            ctx.textAlign = 'center';
            ctx.fillText(text, x + labelWidth/2, y + 300, labelWidth - 100);

            // Rahmen zeichnen
            ctx.strokeStyle = '#cccccc';
            ctx.lineWidth = 2;
            ctx.strokeRect(x, y, labelWidth, labelHeight);
        });

        // Download
        canvas.toBlob(function(blob) {
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'qr-labels.png';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
        });
    }

    function printQRLabels() {
        const printWindow = window.open('', '_blank');
        const labels = document.querySelectorAll('.qr-label');

        if (labels.length === 0) return;

        let printContent = `
            <!DOCTYPE html>
            <html>
            <head>
                <title>QR-Labels drucken</title>
                <link rel="stylesheet" href="/assets/css/print.css">
                <style>
                    body { margin: 0; padding: 20mm; }
                    .qr-label { 
                        width: 85mm; 
                        height: 54mm; 
                        border: 1px solid #ccc; 
                        margin: 5mm; 
                        padding: 5mm; 
                        display: inline-block; 
                        text-align: center; 
                        page-break-inside: avoid; 
                    }
                    .qr-code { 
                        max-width: 30mm; 
                        max-height: 30mm; 
                        margin: 0 auto 3mm; 
                    }
                    .qr-text { 
                        font-size: 8pt; 
                        font-family: Arial, sans-serif; 
                        word-break: break-all; 
                    }
                </style>
            </head>
            <body>
        `;

        labels.forEach(label => {
            const qrCanvas = label.querySelector('.qr-code');
            const text = label.querySelector('.qr-text').textContent;
            const dataUrl = qrCanvas.toDataURL();

            printContent += `
                <div class="qr-label">
                    <img src="${dataUrl}" class="qr-code" alt="QR-Code">
                    <div class="qr-text">${text}</div>
                </div>
            `;
        });

        printContent += '</body></html>';

        printWindow.document.write(printContent);
        printWindow.document.close();

        printWindow.onload = function() {
            printWindow.print();
        };
    }

    // Initialisierung
    document.addEventListener('DOMContentLoaded', initializeQRGenerator);

    // Globale Funktionen exportieren
    window.qrGenerator = {
        generateQR,
        generateQRLabels,
        downloadQRLabels,
        printQRLabels
    };
})();

// Hinweis für echte QR-Code-Bibliothek:
// Für die Produktion sollte eine echte QR-Code-Bibliothek wie qrcode.js verwendet werden:
/*
// Beispiel mit qrcode.js:
function generateQRWithLibrary(text, element) {
    QRCode.toCanvas(element, text, {
        width: 200,
        margin: 2,
        color: {
            dark: '#000000',
            light: '#FFFFFF'
        }
    }, function (error) {
        if (error) console.error(error);
        console.log('QR code generated successfully!');
    });
}
*/
